plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter'

	//ELK 연동을 위한 외부 기술
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.0' // Logstash용 로그백 엔코더

	//STOMP ( Websocket )
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter'

	//AWS 관련
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.563' // 최신 버전 확인 필요

	//추후에 지울 것
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//

	// Spring Security 의존성 추가
//    implementation 'org.springframework.boot:spring-boot-starter-security'

	//DB 관련 설정들
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
//Swagger Ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'


	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // for JSON serialization/deserialization
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient 및 WebFlux 지원

	// Redis 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis
	runtimeOnly 'com.mysql:mysql-connector-j' // sql

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok:1.18.28' // 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'com.google.firebase:firebase-admin:9.1.1'
	implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
